length_IS <- 3000
refit_freq <- 100
SRM <- "CoVaR"
CoCAViaR_model_set <- c("CoCAViaR_6p", "CoCAViaR_8pCrossA", "CoCAViaR_9p", "CoCAViaR_8pPos", "CoCAViaR_10pSigns", "CoCAViaR_10pSignsAbs")
data_Assets <- readRDS(file = "application/data/data_Assets.rds")
CoCAViaR_modelfits <- list()
for (jj in 1:length(CoCAViaR_model_set)){
CoCAViaR_model <- CoCAViaR_model_set[jj]
Mest_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= "2011-12-05") %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= "2011-12-05") %>% pull(NegReturn),
z=NULL, model=CoCAViaR_model, SRM="CoVaR", beta=0.95, alpha=0.95)
CoCAViaR_modelfits[[paste(CoCAViaR_model)]] <- summary(Mest_obj)
}
CoCAViaR_modelfits[[6]]
CoCAViaR_modelfits$CoCAViaR_8pCrossA$data
library(dplyr)
library(ggplot2)
library(reshape2)
library(rmgarch)
library(mvtnorm)
library(cubature)
library(lubridate)
library(doParallel)
library(xtable)
# Load CoCAViaR functions, substitute by a package later on!
source("R/CoQR.R")
source("R/SRM_est_functions.R")
source("R/CoVaR_est_functions.R")
source("R/MES_est_functions.R")
source("R/model_functions.R")
source("R/utils.R")
source("R/GARCH_utils.R")
source("R/CoVaR_cov.R")
source("R/CoQRroll.R")
source("R/SystemicDCCroll.R")
source("R/SystemicRiskFCeval.R")
# 0. Set options
alpha <- 0.95
beta <- 0.95
length_IS <- 3000
refit_freq <- 100
SRM <- "CoVaR"
CoCAViaR_model_set <- c("CoCAViaR_6p", "CoCAViaR_8pCrossA", "CoCAViaR_9p", "CoCAViaR_8pPos", "CoCAViaR_10pSigns", "CoCAViaR_10pSignsAbs")
data_Assets <- readRDS(file = "application/data/data_Assets.rds")
CoCAViaR_modelfits <- list()
for (jj in 1:length(CoCAViaR_model_set)){
set.seed(1)
CoCAViaR_model <- CoCAViaR_model_set[jj]
Mest_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= "2011-12-05") %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= "2011-12-05") %>% pull(NegReturn),
z=NULL, model=CoCAViaR_model, SRM="CoVaR", beta=0.95, alpha=0.95)
CoCAViaR_modelfits[[paste(CoCAViaR_model)]] <- summary(Mest_obj)
}
CoCAViaR_modelfits[[6]]
CoCAViaR_modelfits$CoCAViaR_8pCrossA$data
CoCAViaR_modelfits$CoCAViaR_8pCrossA
CoCAViaR_model_set$CoCAViaR_6p
CoCAViaR_modelfits$CoCAViaR_6p
CoCAViaR_modelfits$CoCAViaR_8pCrossA
CoCAViaR_modelfits$CoCAViaR_9p
CoCAViaR_modelfits$CoCAViaR_8pPos
CoCAViaR_modelfits$CoCAViaR_10pSigns
CoCAViaR_modelfits$CoCAViaR_10pSignsAbs
Mest_obj
summary(Mest_obj, method="boot", B=100)
set.seed(1)
CoQR_AB_appl2 <- CoQR(x=data_lagged$JPM.loss,
y=data_lagged$SPF.loss,
z=z_matrix2,
model="joint_linear",
SRM="CoVaR",
beta=0.95,
alpha=0.95,
optim_replications=c(5,15))
summary(CoQR_AB_appl2)
# Create the covariate matrix without US3MT.ret and "slop of yield curve"
z_matrix2 <- cbind(1, data_lagged %>%
dplyr::select(Spread, TEDSpread, ChangeSpread, SP500.ret, RV.data) %>%
as.matrix())
# Co-Quantile Regression
set.seed(1)
CoQR_AB_appl2 <- CoQR(x=data_lagged$JPM.loss,
y=data_lagged$SPF.loss,
z=z_matrix2,
model="joint_linear",
SRM="CoVaR",
beta=0.95,
alpha=0.95,
optim_replications=c(5,15))
summary(CoQR_AB_appl2)
# Create the covariate matrix without US3MT.ret and "slop of yield curve"
z_matrix2 <- cbind(1, data_lagged %>%
dplyr::select(Spread, ChangeSpread, TEDSpread, SP500.ret, RV.data) %>%
as.matrix())
# Co-Quantile Regression
set.seed(1)
CoQR_AB_appl2 <- CoQR(x=data_lagged$JPM.loss,
y=data_lagged$SPF.loss,
z=z_matrix2,
model="joint_linear",
SRM="CoVaR",
beta=0.95,
alpha=0.95,
optim_replications=c(5,15))
summary(CoQR_AB_appl2)
summary(Mest_obj, method="boot", B=100)
summary(Mest_obj)
library(available)
install.packages("available")
library(available)
available(CoQR)
available("CoQR")
asd
search()
roxygen2::roxygenise()
getwd()
load_all()
library(devtools)
load_all()
load_all()
usethis::use_description()
usethis::use_namespace()
usethis::use_package_doc()
usethis::use_readme_rmd()
usethis::use_mit_license("Timo Dimitriadis")
usethis::use_news_md()
# sets up testing infrastructure
usethis::use_testthat()
?CoQR
rpkg::
CoQR::
pacman::p_functions(CoQR)
library(CoQR)
rpkg::
?CoQR
devtools::check()
devtools::check()
devtools::check()
devtools::check()
roxygenize
library(roxygen2)
roxygenise()
tidyselect
roxygenise()
rm(list = ls())
library(CoQR)
everything
colnames
coef_mat
theme
mad
magn
c(1,2,3) magrittr::%>% mean()
source("~/Dropbox/Mac/Documents/Code/CoQR/R/SystemicRiskFCeval.R")
load_all()
roxygenise()
rm(list = ls())
roxygenise()
na.omit
with
switch
colMeans
ginv
b
uniroot
geom_rect
aes
geom_vline
load_all()
library(CoQR)
data_Assets <- readRDS(file = "../replication_CoQR/application/data/data_Assets.rds")
data_Assets
library(CoQR)
data_Assets <- readRDS(file = "../replication_CoQR/application/data/data_Assets.rds")
# 0. Set options
Date_max <-  "2011-12-05"
CoCAViaR_model_set <- c("CoCAViaR_SAV_diag", "CoCAViaR_SAV_fullA", "CoCAViaR_SAV_full",
"CoCAViaR_AS_pos", "CoCAViaR_AS_signs", "CoCAViaR_AS_mixed")
CoCAViaR_modelfits <- list()
for (jj in 1:length(CoCAViaR_model_set)){
set.seed(1)
CoCAViaR_model <- CoCAViaR_model_set[jj]
Mest_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= Date_max) %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= Date_max) %>% pull(NegReturn),
z=NULL, model=CoCAViaR_model, SRM="CoVaR", beta=0.95, alpha=0.95)
CoCAViaR_modelfits[[paste(CoCAViaR_model)]] <- summary(Mest_obj)
}
data_Assets %>% filter(Asset=="JPM", Date <= Date_max) %>% pull(NegReturn)
data_Assets %>% filter(Asset=="SP500", Date <= Date_max) %>% pull(NegReturn)
CoCAViaR_model
Mest_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= Date_max) %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= Date_max) %>% pull(NegReturn),
z=NULL, model=CoCAViaR_model, SRM="CoVaR", beta=0.95, alpha=0.95)
load_all()
load_all()
Mest_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= Date_max) %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= Date_max) %>% pull(NegReturn),
z=NULL, model=CoCAViaR_model, SRM="CoVaR", beta=0.95, alpha=0.95)
summary(Mest_obj)
document()
library(CoQR)
getSymbols("GS")
JPM <- getSymbols("JPM")
SP500 <- getSymbols("SP500")
JPM <- getSymbols("JPM")
SP500 <- getSymbols("^GSPC")
SP500
getSymbols("JPM")
getSymbols("^GSPC")
JPM
head(JPM)
data_Symbols <- lapply(c("JPM", "^GSPC"), function(x) {
getSymbols(x,
from = "2000/01/01",
to = "2022/05/25",
periodicity = "daily",
auto.assign = FALSE) %>%
data.frame(Date=index(.), check.names=FALSE) %>%
tibble::as_tibble() %>%
rename_all(~stringr::str_replace_all(., paste0(x,"."), ""))
})
names(data_Symbols) <- c("JPM", "SP500")
data_Symbols
class(data_Symbols)
data_Symbols$JPM
data_Assets <- bind_rows(data_Symbols, .id = "Asset") %>%
dplyr::group_by(Asset) %>%
dplyr::mutate(Date=lubridate::as_date(Date),
NegReturn= -100*(log(Close) - log(lag(Close)))) %>%
dplyr::select(Date, Asset, NegReturn)
data_Assets
data_Assets
data_Assets <- bind_rows(data_Symbols, .id = "Asset") %>%
dplyr::group_by(Asset) %>%
dplyr::mutate(Date=lubridate::as_date(Date),
NegReturn= -100*(log(Close) - log(lag(Close)))) %>%
dplyr::select(Date, Asset, NegReturn) %>%
na.omit()
CoCAViaR_obj <- CoQR(x=data_Symbols %>% filter(Asset=="JPM", Date <= "2011-12-05") %>% pull(NegReturn),
y=data_Symbols %>% filter(Asset=="SP500", Date <= "2011-12-05") %>% pull(NegReturn),
z=NULL, model="CoCAViaR_SAV-fullA", SRM="CoVaR", beta=0.95, alpha=0.95)
CoCAViaR_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= "2011-12-05") %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= "2011-12-05") %>% pull(NegReturn),
z=NULL, model="CoCAViaR_SAV-fullA", SRM="CoVaR", beta=0.95, alpha=0.95)
CoCAViaR_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM", Date <= "2011-12-05") %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500", Date <= "2011-12-05") %>% pull(NegReturn),
z=NULL, model="CoCAViaR_SAV_fullA", SRM="CoVaR", beta=0.95, alpha=0.95)
# Get standard errors and print its summary
summary(CoCAViaR_obj)
# Fit a CoCAViaR model
CoCAViaR_obj <- CoQR(x=data_Assets %>% filter(Asset=="JPM") %>% pull(NegReturn),
y=data_Assets %>% filter(Asset=="SP500") %>% pull(NegReturn),
z=NULL, model="CoCAViaR_SAV_fullA", SRM="CoVaR", beta=0.95, alpha=0.95)
# Get standard errors and print its summary
summary(CoCAViaR_obj)
plot(CoCAViaR_obj)
load_all()
library(CoQR)
load_all()
library(devtools)
library(roxygen2)
load_all()
document()
roxygen2::roxygenise()
library(CoQR)
library(CoQR)
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
eps
class(eps)
cbind(z, 0.5*z)
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(4000)
xy <- c(1,1) + cbind(z, 0.5*z)
cbind(z, 0.5*z)
dim( cbind(z, 0.5*z) )
dim(Eps)
dim(eps)
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(4000)
xy <- c(1,1) + cbind(z, 0.5*z) * eps
xy
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(4000)
xy <- c(1,1) + cbind(z, 0.5*z) * eps
CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear"
beta=0.09, alpha=0.95)
CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.09, alpha=0.95)
obj <- CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.09, alpha=0.95)
summary(obj)
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(4000)
xy <- c(1,1) + cbind(2*z, 2.5*z) * eps
obj <- CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.09, alpha=0.95)
summary(obj)
eps <- mvtnorm::rmvt(n=4000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(4000)
xy <- c(1,1) + cbind(2*z, 2.5*z) + eps
obj <- CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.09, alpha=0.95)
summary(obj)
eps <- mvtnorm::rmvt(n=1000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(1000)
xy <- c(1,1) + cbind(2*z, 2.5*z) + eps
obj <- CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.09, alpha=0.95)
summary(obj)
eps <- mvtnorm::rmvt(n=1000, sigma=matrix(c(1,0.5,0.5,1),2), df = 8)
z <- rnorm(1000)
xy <- c(1,1) + cbind(2*z, 2.5*z) + eps
obj <- CoQR(x=xy[,1], y=xy[,2], z=z,
model = "joint_linear",
beta=0.9, alpha=0.95)
summary(obj)
plot(obj)
roxygenise()
roxygenise()
library(CoQR)
roxy_block()
roxygenise()
library(CoQR)
library(CoQR)
library(CoQR)
library(rmgarch)
uspec <- ugarchspec(variance.model=list(garchOrder=c(1,1), model="sGARCH"),
distribution.model="norm")
mspec <- multispec(replicate(2, uspec))
GARCH_spec_1 <- rugarch::ugarchspec(mean.model = list(include.mean = FALSE, armaOrder=c(0,0)),
fixed.pars = list(omega=0.04, alpha1=0.1, beta1=0.85) )
GARCH_spec_1
dccsim <- dccsim(GARCH_spec_1, n.sim=1, m.sim=10000, startMethod="sample")
GARCH_spec_1 <- rugarch::ugarchspec(mean.model = list(include.mean = FALSE, armaOrder=c(0,0)),
fixed.pars = list(omega=0.04, alpha1=0.1, beta1=0.85) )
mspec <- dccspec(uspec=GARCH_spec_1)
mspec <- dccspec(uspec=multispec(list(GARCH_spec_1,  GARCH_spec_1)))
mspec
mspec@model
dccsim <- dccsim(mspec, n.sim=4000, m.sim=1, startMethod="sample")
mspec <- dccspec(uspec=multispec(list(GARCH_spec_1,  GARCH_spec_1)))
data <- dccsim(mspec, n.sim=4000, m.sim=1, startMethod="sample")
dji30retw
dji30retw
data(dji30retw)
dji30retw
class(dji30retw)
head(dji30retw)
rowMeans(dji30retw)
rowMeans(dji30retw) %>% class()
dji30retw$JPM
CoQR(y=rowMeans(dji30retw),
x=as.numeric(dji30retw$JPM),
model="CoCAViaR_SAV_diag")
library(dplyr)
CoQR(y=rowMeans(dji30retw),
x=as.numeric(dji30retw$JPM),
model="CoCAViaR_SAV_diag")
select
summary(obj)
obj <- CoQR(y=rowMeans(dji30retw),
x=as.numeric(dji30retw$JPM),
model="CoCAViaR_SAV_diag")
summary(obj)
obj <- CoQR(x=as.numeric(dji30retw$JPM),
y=rowMeans(dji30retw),
model="CoCAViaR_SAV_fullA")
summary(obj)
obj <- CoQR(x=-as.numeric(dji30retw$JPM),
y=-rowMeans(dji30retw),
model="CoCAViaR_SAV_fullA")
summary(obj)
dim(dji30retw)
obj <- CoQR(x=-as.numeric(dji30retw$JPM),
y=-rowMeans(dji30retw),
model="CoCAViaR_SAV_diag")
summary(obj)
head(dji30retw)
obj <- CoQR(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag")
summary(obj)
library(esreg)
install.packages("esreg")
document()
?CoQR
?model.extract
?model_functions
?model_fun
#' Currently implemented are the following models:
#' \itemize{
#'   \item{"joint_linear"}{Linear models with covariates z for both, the VaR and CoVaR}
#'   \item{"CoCAViaR_SAV_diag 2"}{Stuff}
#'   \item{"CoCAViaR_SAV_diag 2"}{Stuff}
#'   \item{"CoCAViaR_SAV_diag 2"}{Stuff}
#'   \item{"CoCAViaR_SAV_diag 2"}{Stuff}
##' }
#'
#' 'joint_linear
"CoCAViaR_SAV_diag", "CoCAViaR_SAV_fullA", "CoCAViaR_SAV_full",
"CoCAViaR_AS_pos", "CoCAViaR_AS_signs", "CoCAViaR_AS_mixed",
"CoCAViaR_8pCrossCoVaR", "CoCAViaR_10p", "CoCAViaR_7pVaRViolation")
document()
?model_fun
document()
?model_fun
document()
?model_fun
document()
?model_fun
document()
?model_fun
document()
?model_fun
?CoQR
?model_fun
document()
?model_fun
document()
?nabla_joint_linear
?CoQR
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
data(dji30retw)
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
obj_roll <- CoQRroll(data=data.frame(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw))m
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
obj_roll <- CoQRroll(data=data.frame(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw)),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
document()
?CoQR
?CoQRroll
install.packages("tsibble")
data
load_all()
obj_roll <- CoQRroll(data=data.frame(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw)),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
summary(obj_roll)
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
summary(obj_roll)
load_all()
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
summary(obj_roll)
plot(obj_roll)
obj_roll$data()
obj_roll$data
obj_roll$FC_df
load_all()
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=1000, refit_freq=100)
summary(obj_roll)
summary(obj_roll$CoQR_objects[[1]])
summary(obj_roll$CoQR_objects[[2]])
obj_roll$data
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=700, refit_freq=100)
plot(obj_roll)
load_all()
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=700, refit_freq=100)
plot(obj_roll)
FCs
FC_df
load_all()
forecast(CoQR_obj,
newdata=data_tt %>% dplyr::select(x,y))
debugSource("~/Dropbox/Mac/Documents/Code/CoQR/R/CoQR.R")
forecast(CoQR_obj,
newdata=data_tt %>% dplyr::select(x,y))
debugSource("~/Dropbox/Mac/Documents/Code/CoQR/R/CoQR.R")
obj_roll <- CoQRroll(x=-100*as.numeric(dji30retw$JPM),
y=-100*rowMeans(dji30retw),
model="CoCAViaR_SAV_diag",
length_IS=700, refit_freq=100)
plot(obj_roll)
model_fun(obj$theta, df=df, prob_level=obj$prob_level, model=obj$model, SRM=obj$SRM, forecast=TRUE)
tail(df)
dim(df)
length(m$x)
m <- model_fun(obj$theta, df=df, prob_level=obj$prob_level, model=obj$model, SRM=obj$SRM, forecast=TRUE)
length(m$x)
dim(m$m1)
length(m$m1)
